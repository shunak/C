
#include <studio.h>

int main(int argc, const char * argv[])
{
    //List4-1

    /*
    
    int cont;
    
    do{
    
        int no;
        
        printf("整数を入力して下さい：");scanf("%d",&no);

        if(no%2)
            puts("その数は奇数です。");
        else
            puts("その数は偶数です。");
        
        printf("もう一度?【Yes・・・0/No・・・1】:");scanf("%d",&cont);
    }while(!cont);//論理否定演算子　!a aが0であれば1、そうでなければ0(その型はint型)
    
    
    //printfの値がyesとnoで0と9で制御している。9は9である必要はなく、非0であればよい。
    
     */
    
    /*
    
    //List4-2
     
    int num;
    
    do {
    
        printf("非負の整数を入力してください：");scanf("%d",&num);
        if(num<0)
            puts("\a負の数を入力しないで下さい。");
    }while(num<0);
    
    printf("その数を逆から読むと");
    do{
        printf("%d",num%10);
        num=num/10;
        
        }while(num>0);
    puts("です。");
    
     
     */
    
    /*
    
    //初期化子
    //1から5までの和を求めて表示
    
    //List4-4
     
    int no=1;
    int sum=0;
    
    //このようにオブジェクトの生成時に、指定された値である初期値を格納することを初期化といい、
    //その宣言で、=記号の右側に書く定数などの式を初期化子と呼ぶ。
    
    
    
    do{
    
        sum=sum+no;
        no=no+1;
        
    }while(no<=5);
    
    printf("1から5までを足した値は%dです。\n",sum);
    
     */
    
    
    
    //演習4-1
    //List4-2のプログラムを、結果を出力するときに読み込まれた値も表示するように書き換えよ。
    
    /*
    
    int num;
    
    
    do{
        
        printf("非負の整数を入力してください：");scanf("%d",&num);
        if(num<0)
            puts("負の数を入力しないでください。");
    }while(num<0);
    
    
    printf("%dを逆から読むと",num);
    do{
    
        printf("%d",num%10);
        num=num/10;
    }while(num>0);
    puts("です。");
    
    
    */
    
    
    /*
    
    //List4-3
     
    //整数値の桁数を求めるプログラム
    
    int num;
    int dig;
    
    do{
        printf("非負の整数を入力して下さい:");scanf("%d",&num);
        if(num<0)
            puts("負の数を入力しないでください。");
    }while(num<0);
    
    dig=0;
    do{
        num=num/10;
        dig=dig+1;
        
    }while(num>0);
    
    printf("その数の桁数は%dです。\n",dig);
     
     */
    
    
    /*
    
    //演習4-2
    //List4-3のプログラムを、結果を出力するときに読み込まれた値も表示するように書き換えよ。
    
    
    int num;
    int dig;
    
    do{
        printf("非負の整数を入力して下さい:");scanf("%d",&num);
        if(num<0)
            puts("負の数を入力しないでください。");
    }while(num<0);
    
    
    printf("%d",num);
    dig=0;
    do{
        num=num/10;
        dig=dig+1;
        
    }while(num>0);
    
    printf("は%d桁です。\n",dig);
    */
    
    
    //演習4-3
    //２つの整数値を読み込んで、小さい数以上で、大きい方の数以下の整数の全てを加えた値を表示するプログラム
    
    /*
    int a,b,x,y,gou;
    
    puts("２つの整数を入力してください。");
    printf("整数1:");scanf("%d",&a);
    printf("整数2:");scanf("%d",&b);
    
    //xに大きい方、yに小さい方を代入する式
    if(a>b)
        x=a,y=b;
    else
        x=b,y=a;
    
    gou=x;
    do{
        gou=gou+y;
        y=y+1;
        
    }while(y<x);
    
    printf("%d以上%d以下の全整数の和は%dです。\n",b,a,gou);

     
     */
    
    
    //複合代入演算子
    //List4-5
    
    /*
    
    int no=1;
    int sum=0;
    
    //このようにオブジェクトの生成時に、指定された値である初期値を格納することを初期化といい、
    //その宣言で、=記号の右側に書く定数などの式を初期化子と呼ぶ。
    
    do{
        
        sum+=no;//sumにnoを加える
        no+=1;//noに1を加える
        
    }while(no<=5);
    
    //演算子@に対しては、
    //a@=bがa=a@bと基本的には同じ意味になる。
    //演算と代入の二役をこなすのが複合代入演算子の機能である。
    
    
    
    printf("1から5までを足した値は%dです。\n",sum);

    
    
    */
    
    
    /*
    
    //後置増分演算子・後置減分演算子
    
    //List4-6
    
    int no=1;
    int sum=0;
    
    do{
        
        sum+=no;//sumにnoを加える
        no++;//noをインクリメントする。後置増分演算子
        //後置増分演算子はオペランドの値を一つだけ増やす。
        
        
    }while(no<=5);
    
    
    printf("1から5までを足した値は%dです。\n",sum);
    
    */
    
    
    //演習4-4
    //List4-2のプログラムを、複合代入演算子/=を用いて書き換える。
    
    
    /*
    
    int num;
    
    do{
        printf("非負の整数を入力してください:");scanf("%d",&num);
        if(num<0)
            puts("負の数を入力しないでください。");
    }while(num<0);
    
    printf("その数を逆から読むと");
    do{
        printf("%d",num%10);
        num/=10;//num=num/10を複合代入演算子を用いて書き換えた。
    }while(num>0);
    puts("です。");
    
    */
    
    
    
    //演習4-5
    //List4-3のプログラムを、複合代入演算子/=および後置増分演算子++を用いて書き換えよ。
    
    
    int num;
    int dig;
    
    do{
        printf("非負の整数を入力してください:");scanf("%d",&num);
        if(num<0)
            puts("負の数を入力しないでください。");
    }while(num<0);
    
    dig=0;
    
    do{
        num/=10;
        dig++;
    }while(num>0);
    
    printf("その数は%d桁です。\n",dig);
     
    return 0;
}


//do文の働きによって、制御式である式を評価した値が0でない限り、ループ本体と呼ばれる文が
//繰り返し実行されることになる。
